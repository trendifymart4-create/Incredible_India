rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() &&
             ('admin' in request.auth.token) &&
             request.auth.token.admin == true;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidUser() {
      return isAuthenticated() &&
             request.auth.token.email_verified == true;
    }
    
    // Helper function to check if user is admin or super admin
    function isAdminOrSuperAdmin() {
      return isAdmin() || (isAuthenticated() &&
             'role' in request.auth.token &&
             request.auth.token.role == 'super_admin');
    }

    // Users collection - users can read/write their own profile, admins can read all
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated();
    }

    // Destinations collection - public read, admin write
    match /destinations/{destinationId} {
      allow read: if true; // Public read access
      allow write: if isAdmin();
      allow create: if isAdmin();
      allow delete: if isAdmin();
    }

    // Videos collection - public read, admin write
    match /videos/{videoId} {
      allow read: if true; // Public read access
      allow write: if isAdmin();
      allow create: if isAdmin();
      allow delete: if isAdmin();
    }

    // Reviews collection - authenticated users can create, owners can edit
    match /reviews/{reviewId} {
      allow read: if true; // Public read access
      allow create: if isAuthenticated();
      allow update: if isOwner(resource.data.userId) || isAdmin();
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }

    // Favorites collection - users can manage their own favorites
    match /favorites/{favoriteId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isAuthenticated();
    }

    // User favorites subcollection
    match /users/{userId}/favorites/{favoriteId} {
      allow read, write: if isOwner(userId);
    }

    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
      allow create: if isAdmin();
    }

    // User notifications subcollection
    match /users/{userId}/notifications/{notificationId} {
      allow read, write: if isOwner(userId);
    }

    // Analytics collection - admin only
    match /analytics/{analyticsId} {
      allow read, write: if isAdmin();
    }
    
    // NEW NOTIFICATION SYSTEM RULES
    
    // Notifications collection - Admin write, authenticated user read
    match /notifications/{notificationId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdminOrSuperAdmin();
    }
    
    // User notifications - User-specific access only
    match /userNotifications/{userNotificationId} {
      allow read, update, delete: if isAuthenticated() &&
                     resource.data.userId == request.auth.uid;
      allow create: if isAdminOrSuperAdmin();
    }
    
    // Device tokens - User-specific access only
    match /deviceTokens/{tokenId} {
      allow read, write: if isAuthenticated() &&
                            resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() &&
                       request.resource.data.userId == request.auth.uid;
    }
    
    // VR Analytics - User write (own data), Admin read
    match /vrAnalytics/{analyticsId} {
      allow create: if isAuthenticated() &&
                       request.resource.data.userId == request.auth.uid;
      allow read: if isAdminOrSuperAdmin() ||
                     (isAuthenticated() && resource.data.userId == request.auth.uid);
      allow list: if isAdminOrSuperAdmin();
    }

    // Payment records - users can read their own, admins can read all
    match /payments/{paymentId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isAuthenticated();
      allow update: if isAdmin();
    }

    // Device tokens for push notifications
    match /deviceTokens/{tokenId} {
      allow read, write: if isOwner(resource.data.userId);
      allow create: if isAuthenticated();
    }

    // Admin-only collections
    match /admin/{document=**} {
      allow read, write: if isAdmin();
    }

    // Featured content configuration
    match /config/{configId} {
      allow read: if true; // Public read access
      allow write: if isAdmin();
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}